@version(v1)
interface RGB20
	global burnedSupply(*): RGBContract.Amount
	global issuedSupply(+): RGBContract.Amount
	global replacedSupply(*): RGBContract.Amount
	global spec: RGBContract.AssetSpec
	global terms: RGBContract.AssetTerms

	owned assetOwner(*): Zk64
	public burnEpoch(?): Rights
	public burnRight(*): Rights
	public inflationAllowance(*): Zk64
	public updateRight(?): Rights

	error supplyMismatch: 1
		"supply specified as a global parameter doesn't match the issued supply allocated to the asset owners"
	error nonEqualAmounts: 2
		"the sum of spent assets doesn't equal to the sum of assets in outputs"
	error invalidProof: 3
		"the provided proof is invalid"
	error insufficientReserves: 4
		"reserve is insufficient to cover the issued assets"
	error insufficientCoverage: 5
		"the claimed amount of burned assets is not covered by the assets in the operation inputs"
	error issueExceedsAllowance: 6
		"you try to issue more assets than allowed by the contract terms"

	genesis
		errors: supplyMismatch, invalidProof, insufficientReserves
		meta: RGBContract.IssueMeta
		globals: issuedSupply, spec, terms
		assigns: assetOwner(*), burnEpoch(?), inflationAllowance(*), updateRight(?)

	transition burn:
		errors: supplyMismatch, invalidProof, insufficientCoverage
		meta: RGBContract.BurnMeta
		globals: burnedSupply
		assigns: burnRight(?)
		inputs: burnRight

	transition issue:
		errors: supplyMismatch, invalidProof, insufficientReserves, issueExceedsAllowance
		meta: RGBContract.IssueMeta
		globals: issuedSupply
		assigns: assetOwner(*), inflationAllowance(*)
		default: assetOwner
		inputs: inflationAllowance(+)

	transition openEpoch:
		errors: 
		assigns: burnEpoch(?), burnRight
		default: burnRight
		inputs: burnEpoch

	transition rename:
		errors: 
		globals: spec
		assigns: updateRight(?)
		default: updateRight
		inputs: updateRight

	transition replace:
		errors: supplyMismatch, nonEqualAmounts, invalidProof, insufficientCoverage
		meta: RGBContract.BurnMeta
		globals: replacedSupply
		assigns: assetOwner(*), burnRight(?)
		default: assetOwner
		inputs: burnRight

	transition transfer: required, default
		errors: nonEqualAmounts
		assigns: assetOwner(+)
		default: assetOwner
		inputs: assetOwner(+)

