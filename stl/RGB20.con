@version(1)
@timestamp(1711405444)
interface RGB20: FungibleAsset, NamedAsset, RenameableAsset, ReplaceableAsset, ReservableAsset, InflatableAsset
	global burnedSupply(*): RGBContract.Amount
	global issuedSupply(+): RGBContract.Amount
	global replacedSupply(*): RGBContract.Amount
	global spec: RGBContract.AssetSpec
	global terms: RGBContract.AssetTerms

	owned assetOwner(*): Zk64
	public burnEpoch(+): Rights
	public burnRight(*): Rights
	public inflationAllowance(*): Zk64
	public updateRight: Rights

	error insufficientCoverage
		"the claimed amount of burned assets is not covered by the assets in the operation inputs"
	error insufficientReserves
		"reserve is insufficient to cover the issued assets"
	error invalidProof
		"the provided proof is invalid"
	error issueExceedsAllowance
		"you try to issue more assets than allowed by the contract terms"
	error nonEqualAmounts
		"the sum of spent assets doesn't equal to the sum of assets in outputs"
	error supplyMismatch
		"supply specified as a global parameter doesn't match the issued supply allocated to the asset owners"

	genesis: abstract
		errors: insufficientReserves, invalidProof, supplyMismatch
		globals: issuedSupply, spec, terms
		assigns: assetOwner(*), burnEpoch, inflationAllowance(+), updateRight

	transition burn: required, final
		errors: insufficientCoverage, invalidProof, supplyMismatch
		meta: RGBContract.BurnMeta
		globals: burnedSupply
		assigns: burnRight(?)
		inputs: burnRight

	transition issue: abstract
		errors: insufficientReserves, invalidProof, issueExceedsAllowance, supplyMismatch
		globals: issuedSupply
		assigns: assetOwner(*), inflationAllowance(*)
		default: assetOwner
		inputs: inflationAllowance(+)

	transition openEpoch: required, final
		assigns: burnEpoch(?), burnRight
		default: burnRight
		inputs: burnEpoch

	transition rename: required, final
		globals: spec
		assigns: updateRight(?)
		default: updateRight
		inputs: updateRight

	transition replace: required, final
		errors: insufficientCoverage, invalidProof, nonEqualAmounts, supplyMismatch
		meta: RGBContract.BurnMeta
		globals: replacedSupply
		assigns: assetOwner(*), burnRight(?)
		default: assetOwner
		inputs: burnRight

	transition transfer: required, default, abstract
		errors: nonEqualAmounts
		assigns: assetOwner(+)
		default: assetOwner
		inputs: assetOwner(+)

