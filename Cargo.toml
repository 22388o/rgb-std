[workspace]
members = [
    "std",
    ".",
    "rgbx"
]
default-members = [
    "std",
    "."
]

[workspace.package]
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
homepage = "https://github.com/RGB-WG"
repository = "https://github.com/RGB-WG/rgb-wallet"
rust-version = "1.66" # Due to strict encoding library (caused by GAD)
edition = "2021"
license = "Apache-2.0"

[workspace.dependencies]
amplify = "4.0.0-beta.17"
strict_encoding = "2.0.0-rc.1"
commit_verify = "0.10.0-beta.3"
bp-core = "0.10.0-beta.2"
rgb-core = { version = "0.10.0-beta.1", features = ["base64"] }

[package]
name = "rgb-wallet"
version = "0.10.0-alpha.1"
description = "RGB wallet library for smart contracts on Bitcoin & Lightning network"
keywords = ["bitcoin", "lightning", "rgb", "smart-contracts", "lnp-bp"]
categories = ["cryptography::cryptocurrencies"]
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }
readme = "README.md"
exclude = [".github", "std"]

[lib]
name = "rgb"

[dependencies]
rgb-core = { workspace = true }
rgb-std = { version = "0.10.0-alpha.1", path = "std" }

[features]
default = []
all = ["in-mem"]
in-mem = ["rgb-std/in-mem"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
rand = { version = "0.8.4", optional = true }
getrandom = { version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[package.metadata.docs.rs]
features = [ "all" ]

[patch.crates-io]
strict_encoding = { git = "https://github.com/strict-types/strict-encoding" }
strict_types = { git = "https://github.com/strict-types/strict-types" }
aluvm = { git = "https://github.com/AluVM/rust-aluvm" }
commit_verify = { git = "https://github.com/LNP-BP/client_side_validation" }
bp-core = { git = "https://github.com/BP-WG/bp-core" }
rgb-core = { git = "https://github.com/RGB-WG/rgb-core" }
